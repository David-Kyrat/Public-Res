#!/bin/bash

# TODO: CONNECT TO WIFI  (manually)


# install git and clone this setup script (manually))

# sudo apt update && sudo apt upgrade -y
# sudo dnf install git wget
# wget https://raw.githubusercontent.com/David-Kyrat/Public-Res/refs/heads/master/syssetup



# -------- SETUP START --------

#sudo dnf install -y build-essential
sudo dnf install -y keychain

# network tools
sudo dnf install -y \
net-tools \
iproute2 \
curl \
dnsutils \
wireless-tools

curl -s https://packagecloud.io/install/repositories/ookla/speedtest-cli/script.rpm.sh | sudo bash
sudo dnf install speedtest

# convenience tools

sudo dnf --setopt=skip_missing_names_on_install=True install -y \
		jq \
		lsd \
		bat \
		ripgrep \
		fd-find

curl -sS https://starship.rs/install.sh | sh

#snap install nvim -y

curl -LO https://github.com/neovim/neovim/releases/latest/download/nvim-linux-x86_64.appimage
chmod u+x nvim-linux-x86_64.appimage

sudo mkdir -p /usr/local/bin
sudo mv nvim-linux-x86_64.appimage /usr/local/bin/nvim


# Install Ntfy RHEL

sudo rpm -ivh https://github.com/binwiederhier/ntfy/releases/download/v2.11.0/ntfy_2.11.0_linux_amd64.rpm

sudo systemctl enable ntfy 
sudo systemctl start ntfy
		


# ----- Now Setting Up remote copy paste ----&

read -p "Press Y/Yes when you've installed ntfy. (Y/N) N: quit: " confirm && [[ $confirm == [yY] || $confirm == [yY][eE][sS] ]] || exit 1

# !!! 5 char missing !!! 
topic="5smmqt822t7gdkan45h1r6dhfnuk5nfkd03-ubuntuserver"

bin="/home/noahl/.bin"
mkdir -p $bin

echo '#!/bin/bash' > "$bin/ntfy_listen"
echo "ntfy sub $topic 'echo \"\$m\" > ~/log.txt'" >> "$bin/ntfy_listen"
chmod u+x "$bin/ntfy_listen"
export PATH="$bin:$PATH"

# start ntfy "daemon" (nt rlly one but osef) to forward  ntfy msgs to log file (to remote copy/paste)
ntfy sub $topic 'echo "$m" > ~/log.txt' &



# ----- Securely Getting back SSH identity key --------


mkdir -p ~/.ssh
sudo chmod 700 ~/.ssh

keyname="id_ed25519_leg5pro-identity"

curl -sSLO https://raw.githubusercontent.com/David-Kyrat/Public-Res/refs/heads/master/$keyname.gpg

echo -e "\n\n >> Downloaded encrypted private key, be ready to enter passphrase."
read -p "Press any key to continue:" confirm

gpg -d $keyname.gpg > $keyname
sudo chmod 600 $keyname
ssh-keygen -y -f $keyname > $keyname.pub
sudo chmod 600 $keyname.pub

mv $keyname  ~/.ssh/$keyname
mv $keyname.pub  ~/.ssh/$keyname.pub
ln -s ~/.ssh/$keyname ~/.ssh/id_ed25519
ln -s ~/.ssh/$keyname.pub ~/.ssh/id_ed25519.pub

#eval $(keychain --eval --quiet $HOME/.ssh/$keyname)
#echo 'eval $(keychain --eval --quiet $HOME/.ssh/id_ed25519_leg5pro-identity)' >> "$HOME/.profile"


echo -e "\nTesting Validity of decrypted ssh keys for GitHub:"

ssh -T git@github.com


# ----- Download .customrc, .gitconfig and other private config files ------

read -p "Or you authenticated to github ? / Want to continue? (Y/N): " confirm && [[ $confirm == [yY] || $confirm == [yY][eE][sS] ]] || exit 1


export config="$HOME/.config"
#export config2="$HOME/configit"
#rm -rf $config2 &> ./syssetuplog.git

mv $config $config.bak &> ./syssetuplog.txt

git clone -b serv --depth 1 git@github.com:David-Kyrat/DotFiles.git $config

cd

ln -f $config/.customrc
ln -f $config/.gitconfig
cp $config/gacp $bin


echo -e '#=========================\n' >> .bashrc
echo 'export XDG_CONFIG_HOME=$HOME/.config' >> .bashrc
echo 'export config=$XDG_CONFIG_HOME' >> .bashrc
echo 'export customrc=$HOME/.customrc' >> .bashrc
echo 'export bashrc=$HOME/.bashrc' >> .bashrc
echo 'source $customrc' >> .bashrc


